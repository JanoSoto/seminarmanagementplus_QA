/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package managedbeans2.temas;

import entities.Alumno;
import entities.Historial;
import entities.Profesor;
import entities.Tema;
import entities.Propuesta;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.ejb.EJB;
import javax.enterprise.context.RequestScoped;
import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ManagedProperty;
import javax.faces.context.FacesContext;
import managedbeans.AuthMB;
import static managedbeans2.propuestas.ComisionRevisora2MB.fechaCorrecta;
import sessionbeans.AlumnoFacadeLocal;
import sessionbeans.ComisionCorrectoraFacadeLocal;
import sessionbeans.HistorialFacadeLocal;
import sessionbeans.ProfeCorreccionFacadeLocal;
import sessionbeans.ProfePropuestaFacadeLocal;
import sessionbeans.ProfesorFacadeLocal;
import sessionbeans.TemaFacadeLocal;

/**
 *
 * @author David
 */
@ManagedBean(name ="borradorFinalMB")
@RequestScoped
public class BorradorFinalMB {
    @EJB
    private HistorialFacadeLocal historialFacade;
    @EJB
    private ComisionCorrectoraFacadeLocal comisionCorrectoraFacade;
    @EJB
    private ProfePropuestaFacadeLocal profePropuestaFacade;
    @EJB
    private ProfeCorreccionFacadeLocal profeCorreccionFacade;
    @EJB
    private AlumnoFacadeLocal alumnoFacade;
    @EJB
    private ProfesorFacadeLocal profesorFacade;
    @EJB
    private TemaFacadeLocal temaFacade;
    
    private Integer idTema;
    private String rutAlumno,nombreTema,fechaTema,semestreTema;
    private Tema tema;
    private Profesor profGuia;
    private Date date;
    private static final org.apache.log4j.Logger LOGGER = org.apache.log4j.Logger.getLogger(BorradorFinalMB.class);
    
    public BorradorFinalMB() {
    }
    
    public void entregarBorrador(){
        FacesContext context = FacesContext.getCurrentInstance();
        
        //Se valida que se haya seleccionado Tema
        if((idTema==null)||(idTema==-1)){
            context.addMessage(null, new FacesMessage("Tema","No se ingresó un tema"));
            return;
        }
        
        //Se valida la fecha
        if(date==null || date.equals("")){
            context.addMessage(null, new FacesMessage("Fecha","Debe seleccionar la fecha de entrega del Borrador"));
            return;
        }
        
        tema = temaFacade.findById(idTema).get(0);
        //Seteamos estado "Vigente con Borrador Final"
        System.out.println(tema.getFechaTema());
        System.out.println(date);
        if( fechaCorrecta(tema.getFechaTema(),dateToString(date)) == false){
            return;
        }
        tema.setPrecerrado(false);
        tema.setEstadoTema(6);
<<<<<<< HEAD
        //tema.setSemestreTermino(semestre);
=======
        tema.setFechaBorrador(dateToString(date));
>>>>>>> 6d301c998f5957712e6a24ed5b6660b6a6eef0d4
        temaFacade.edit(tema);
        
        /*
        //Añadimos al historial del alumno
        Date temp = new Date();
        String dateHist = dateToString(temp);
        Historial histTemaAlum = new Historial();
        histTemaAlum.setDescripcion("Alumno entregó Borrador Final. Lo ingresó el usuario "+user.getFullNameUser());
        histTemaAlum.setFechaHistorial(dateHist);
        histTemaAlum.setTipoHistorial(2);
        histTemaAlum.setIdEntidad(tema.getIdRevisora().getIdPropuesta().getRutAlumno().getRutAlumno());
        historialFacade.create(histTemaAlum);
        
        
        //Añadimos al historial del usuario que ingresó el borrador
        Historial histBorradorUser = new Historial();
        histBorradorUser.setDescripcion("Ingresó Borrador Final del alumno "+tema.getIdRevisora().getIdPropuesta().getRutAlumno().getNombreAlumno()+" "+tema.getIdRevisora().getIdPropuesta().getRutAlumno().getApellidoAlumno());
        histBorradorUser.setFechaHistorial(dateHist);
        histBorradorUser.setTipoHistorial(3);
        histBorradorUser.setIdEntidad(user.getUsername());
        historialFacade.create(histBorradorUser);
        
        //Agregamos el historial de cambio de estado
        Historial historial = new Historial();
        String fecha = dateToString(date);
        historial.setDescripcion("Borrador Final: El estado del tema cambió de 'Vigente' a 'Vigente con borrador final'");
        historial.setFechaHistorial(fecha);
        historial.setIdEntidad(String.valueOf(idTema));
        historial.setTipoHistorial(1);
        historialFacade.create(historial);
        */
        //Mensaje de confirmación
        context.addMessage(null, new FacesMessage("Tema modificado", "El estado del tema seleccionado se modificó a Vigente con borrador final")); 
        LOGGER.info("El estado del tema seleccionado se modificó a Vigente con borrador final");
    }
    
    //Declaramos esto para poder acceder al managed bean de autenticación (para almecenar el usuario en el historial)
    @ManagedProperty(value="#{authMB}")
    private AuthMB user;
    
    
    public AuthMB getUser() {
        return user;
    }

    public void setUser(AuthMB user) {
        this.user = user;
    }
    
    public Integer getIdTema() {
        return idTema;
    }

    public void setIdTema(Integer idTema) {
        this.idTema = idTema;
    }

    public String getRutAlumno() {
        return rutAlumno;
    }

    public void setRutAlumno(String rutAlumno) {
        this.rutAlumno = rutAlumno;
    }

    public String getNombreTema() {
        return nombreTema;
    }

    public void setNombreTema(String nombreTema) {
        this.nombreTema = nombreTema;
    }

    public String getFechaTema() {
        return fechaTema;
    }

    public void setFechaTema(String fechaTema) {
        this.fechaTema = fechaTema;
    }

    public String getSemestreTema() {
        return semestreTema;
    }

    public void setSemestreTema(String semestreTema) {
        this.semestreTema = semestreTema;
    }

    public Date getDate() {
        return date;
    }

    public void setDate(Date date) {
        this.date = date;
    }

    public Tema getTema() {
        return tema;
    }

    public void setTema(Tema tema) {
        this.tema = tema;
    }

    public Profesor getProfGuia() {
        return profGuia;
    }

    public void setProfGuia(Profesor profGuia) {
        this.profGuia = profGuia;
    }
    
    public String dateToString(Date dateChoosen) {
        SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        return format.format(dateChoosen);
    }
}
